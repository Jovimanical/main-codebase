version: "2"
# networks:
#   app: null
volumes:
  elastic-data:
    driver: local
  postgres_data_dev: {}
  postgres_backup_dev: {}
  lets_encrypt_dev: {}
  staticfiles: {}
  mediafiles: {}
services:
  postgres:
    image: sameersbn/postgresql:9.6-2
    environment:
      - DB_USER=biola
      - DB_PASS=biola
      - DB_NAME=tutor_service,location_service,request_service


  django:
    build:
      context: .
      dockerfile: ./compose/local/Dockerfile-dev
    command: "python /app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./tuteria:/app
    ports:
      - "8000:8000"
      - "3500:3500"
    env_file:
      - ./env/db.env
    restart: always
    depends_on:
      # - redis
      # - notification-service
      # - location-service
      # - tutor-service
      # - request-service
      - mailhog
    stdin_open: true
    tty: true
    
  redis:
    expose:
    - '6379'
    image: redis:alpine
    volumes:
    - /var/lib/redis
    - /var/log/redis/
    ports:
      - "6379:6379"
  
  test:
    image: tuteria/dev
    # build:
    #   context: .
    #   dockerfile: ./compose/django/Dockerfile-test
    command: fab test_ci
    # depends_on:
    #   - postgres
    # environment:
    #   - DJANGO_CONFIGURATION=GodwinLocal
    #   - DATABASE_URL=postgres://tuteria:punnisher@postgres/tuteria
    #   - USE_DOCKER=yes
    #   - CLOUDINARY_URL=cloudinary://728568457692931:GUot9JhC1Rol3xfhen7dOLNif_k@tuteria
    volumes:
      - .:/app
    # links:
    #   - postgres
  master:
    env_file:
    - ./env/test.env
    image: sameersbn/postgresql:9.6-2
    ports:
    - 0.0.0.0:5434:5432
    volumes:
      # If you are using boot2docker, postgres data has to live in the VM for now until #581 is fixed
      # for more info see here: https://github.com/boot2docker/boot2docker/issues/581
      - postgres_data_dev:/var/lib/postgresql/data

  location-service:
    image: tuteria/location
    environment:
      - DATABASE_URL=postgres://biola:biola@postgres/location_service
      - REDIS_URL=redis://redis:6379
      - DJANGO_SETTINGS_MODULE=config.settings.local
    depends_on:
      - postgres

  notification-service:
    image: tuteria/notification-service
    environment:
      - FLASK_CONFIGURATION=app.config.TestingConfig

  tutor-service:
    image: tuteria/tutor
    environment:
      - DATABASE_URL=postgres://biola:biola@postgres/tutor_service
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - REDIS_URL=redis://redis:6379
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - EMAIL_SERVICE_URL=http://notification-service:5000/
      - LOCATION_SERVICE_URL=http://location-service:8000/
    depends_on:
      - postgres
      - notification-service
      - location-service

  request-service:
    image: tuteria/request
    command: /start-dev.sh
    environment:
      - DATABASE_URL=postgres://biola:biola@postgres/request_service
      - DJANGO_SETTINGS_MODULE=config.settings.test
      - REDIS_URL=redis://redis:6379
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - MONOLITH_URL=http://monolith:5001
      - EMAIL_SERVICE_URL=http://notification_service:5000
    
    depends_on:
      - postgres
      - notification-service



  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"