# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- develop
- master
- feature/*
- bug/*

resources:
# - repo: self
  repositories: 
    - repository: templates
      type: git 
      name: Tuteria/tuteria-deploy
      ref: refs/heads/develop

pool:
  vmImage: ubuntu-latest

stages:
- template: azure-templates/frontend-deploy-stage.yml@templates
  parameters:
    short_name: "tuteria/tuteria"
    tag: $(Build.BuildId)
    dockerfile: $(Build.SourcesDirectory)/compose/django/Dockerfile
    with_test: true
# # Docker
# # Build a Docker image
# # https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger:
# - master
# - develop
# - feature/*
# - bug/*

# resources:
# - repo: self

# variables:
#   tag: '$(Build.BuildId)'
#   gitlabhub: 'Gitlab Tuteria'
#   imageName: 'registry.gitlab.com/tuteria/tuteria'
#   shortName: "tuteria/tuteria"


# stages:
# - stage: Build
#   displayName: Build image
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: ubuntu-latest
#     steps:
#     - task: Docker@2
#       displayName: Build an image
#       inputs:
#         command: build
#         repository: $(imageName)
#         dockerfile: '$(Build.SourcesDirectory)/compose/django/Dockerfile'
#         tags: |
#           $(tag)
#         buildContext: '$(Build.SourcesDirectory)'
#     - task: Docker@2
#       displayName: Push image
#       inputs:
#         containerRegistry: |
#           $(gitlabhub)
#         repository: $(shortName)
#         command: push
#         tags: |
#           $(tag)

# - stage: Deploy
#   displayName: Deploy App
#   jobs:
#   - job: Deploy
#     displayName: Deploy
#     pool:
#       vmImage: ubuntu-latest
#     steps:
#       - task: UsePythonVersion@0
#         inputs:
#           versionSpec: '2.x'
#           addToPath: true
#           architecture: 'x64'
#         name: "pyTools"
#       - script: $(pyTools.pythonLocation)/bin/pip install fabric==1.14.1
#         displayName: Install Fabric for deployment.
      
#       - task: UsePythonVersion@0
#         inputs:
#           versionSpec: '2.x'
#           architecture: 'x64'
#         displayName: Run tests.

#       - script: PRODUCTION_PASSWORD=$(prod_pasword) $(pyTools.pythonLocation)/bin/fab run_tests:build_no=$(tag)
#         displayName: run tests with build_no $(tag)
      
#       - task: UsePythonVersion@0
#         inputs:
#           versionSpec: '2.x'
#           architecture: 'x64'
#         displayName: Use cached Python for deployment.

#       - script: PRODUCTION_PASSWORD=$(prod_pasword) $(pyTools.pythonLocation)/bin/fab deploy_dev:build_no=$(tag)
#         displayName: deploy image with build_no $(tag)
      
   