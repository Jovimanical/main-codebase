# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  gitlabhub: 'Gitlab Tuteria'
  imageName: 'registry.gitlab.com/tuteria/tuteria'
  shortName: "tuteria/tuteria"


stages:
# - stage: Test
#   displayName: Test
#   jobs:
#   - job: Test
#     displayName: Run Tests
#     pool:
#       vmImage: ubuntu-latest
#     steps:
#       - task: UsePythonVersion@0
#         inputs:
#           versionSpec: '3.6'
#           addToPath: true
#           architecture: 'x64'
#         name: "pyTools"
#       - script: $(pyTools.pythonLocation)/bin/pip install -r requirements/python3.txt
#         displayName: Install main dependencies.
      
#       - task: UsePythonVersion@0
#         inputs:
#           versionSpec: '3.6'
#           architecture: 'x64'
#         displayName: Install second test dependencies.
#       - script: $(pyTools.pythonLocation)/bin/pip install -r tuteria/requirements.txt

#       - task: UsePythonVersion@0
#         inputs:
#           versionSpec: '3.6'
#           architecture: 'x64'
#         displayName: Run tests.
#       - script: $(pyTools.pythonLocation)/bin/pytest -s tuteria

#       - task: UsePythonVersion@0
#         inputs:
#           versionSpec: '3.6.15'
#           architecture: 'x64'
#         displayName: Run tests.
#       - script: $(pyTools.pythonLocation)/bin/pytest -s tuteria

- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        repository: $(imageName)
        dockerfile: '$(Build.SourcesDirectory)/compose/django/Dockerfile'
        tags: |
          $(tag)
        buildContext: '$(Build.SourcesDirectory)'
    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: |
          $(gitlabhub)
        repository: $(shortName)
        command: push
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy App
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '2.x'
          addToPath: true
          architecture: 'x64'
        name: "pyTools"
      - script: $(pyTools.pythonLocation)/bin/pip install fabric==1.14.1
        displayName: Install Fabric for deployment.
      
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '2.x'
          architecture: 'x64'
        displayName: Use cached Python for deployment.

      - script: PRODUCTION_PASSWORD=$(prod_pasword) $(pyTools.pythonLocation)/bin/fab deploy_dev:build_no=$(tag)
        displayName: deploy image with build_no $(tag)
      
   