# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-08-12 07:06
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("bookings", "0001_initial"),
        ("skills", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.CharField(blank=True, max_length=20, verbose_name="image"),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=40,
                        verbose_name="first name",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=40, verbose_name="title"),
                ),
                ("is_last_agent", models.BooleanField(default=False)),
                (
                    "next_agent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="external.Agent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BaseRequestTutor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "request_type",
                    models.IntegerField(
                        choices=[(1, b"Regular Request"), (2, b"Tutor Request")],
                        default=1,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"Any gender is fine"),
                            (b"M", b"I prefer a Male"),
                            (b"F", b"I prefer a Female"),
                        ],
                        db_index=True,
                        max_length=2,
                    ),
                ),
                (
                    "hours_per_day",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (b"", b"Select"),
                            (1, b"1 hour"),
                            (2, b"2 hours"),
                            (3, b"3 hours"),
                            (4, b"4 hours"),
                            (5, b"5 hours"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "no_of_students",
                    models.IntegerField(
                        choices=[(1, b"1"), (2, b"2"), (3, b"3"), (4, b"4"), (5, b"5")],
                        default=1,
                    ),
                ),
                ("expectation", models.TextField(max_length=800)),
                ("home_address", models.CharField(blank=True, max_length=100)),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=40,
                        verbose_name="first name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=40,
                        verbose_name="last name",
                    ),
                ),
                (
                    "number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128
                    ),
                ),
                (
                    "time_to_call",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"Best Time to Call"),
                            (b"morining", b"9am - 11am"),
                            (b"afternoon", b"1pm - 3pm"),
                            (b"evening", b"5pm - 7pm"),
                            (b"Any Time", b"Any Time"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"Select State"),
                            (b"Abia", b"Abia"),
                            (b"Abuja", b"Abuja"),
                            (b"Adamawa", b"Adamawa"),
                            (b"Akwa Ibom", b"Akwa Ibom"),
                            (b"Anambra", b"Anambra"),
                            (b"Bayelsa", b"Bayelsa"),
                            (b"Bauchi", b"Bauchi"),
                            (b"Benue", b"Benue"),
                            (b"Borno", b"Borno"),
                            (b"Cross River", b"Cross River"),
                            (b"Delta", b"Delta"),
                            (b"Edo", b"Edo"),
                            (b"Ebonyi", b"Ebonyi"),
                            (b"Ekiti", b"Ekiti"),
                            (b"Enugu", b"Enugu"),
                            (b"Gombe", b"Gombe"),
                            (b"Imo", b"Imo"),
                            (b"Jigawa", b"Jigawa"),
                            (b"Kaduna", b"Kaduna"),
                            (b"Kano", b"Kano"),
                            (b"Katsina", b"Katsina"),
                            (b"Kebbi", b"Kebbi"),
                            (b"Kogi", b"Kogi"),
                            (b"Kwara", b"Kwara"),
                            (b"Lagos", b"Lagos"),
                            (b"Nassawara", b"Nassawara"),
                            (b"Niger", b"Niger"),
                            (b"Ogun", b"Ogun"),
                            (b"Ondo", b"Ondo"),
                            (b"Osun", b"Osun"),
                            (b"Oyo", b"Oyo"),
                            (b"Plateau", b"Plateau"),
                            (b"Rivers", b"Rivers"),
                            (b"Sokoto", b"Sokoto"),
                            (b"Taraba", b"Taraba"),
                            (b"Yobe", b"Yobe"),
                            (b"Zamfara", b"Zamfara"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                ("vicinity", models.CharField(blank=True, max_length=70, null=True)),
                (
                    "budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, default=0, max_digits=10
                    ),
                ),
                ("drip_counter", models.IntegerField(default=0)),
                (
                    "where_you_heard",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"Select One"),
                            (b"1", b"TV"),
                            (b"2", b"Radio"),
                            (b"3", b"Facebook"),
                            (b"4", b"LinkedIn"),
                            (b"5", b"Twitter"),
                            (b"6", b"Search Engine (Google/Yahoo/Bing)"),
                            (b"7", b"Friend/Family/Word of Mouth"),
                            (b"8", b"SMS Notification"),
                            (b"9", b"LindaIkeji Blog"),
                            (b"10", b"Nairaland"),
                            (b"11", b"BellaNaija"),
                            (b"12", b"Instagram"),
                            (b"13", b"Others"),
                            (b"14", b"Phone call (Generic)"),
                            (b"15", b"Phone call (Facebook)"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "tutoring_location",
                    models.CharField(
                        choices=[
                            (b"user", b"Client's Location"),
                            (b"tutor", b"Tutor's Location"),
                            (b"neutral", b"Anywhere convenient"),
                        ],
                        default=b"user",
                        max_length=10,
                    ),
                ),
                (
                    "class_urgency",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"How soon should lessons start?"),
                            (b"immediately", b"Immediately"),
                            (b"next_weeks", b"From next week"),
                            (b"2_weeks", b"In 2 weeks"),
                            (b"next_month", b"In 1 month"),
                            (b"2_month", b"In 2 months"),
                            (b"not_sure", b"Not sure yet"),
                        ],
                        default=b"",
                        max_length=30,
                    ),
                ),
                (
                    "days_per_week",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (b"", b"Select duration"),
                            (1, b"1 week"),
                            (2, b"2 weeks"),
                            (3, b"3 weeks"),
                            (4, b"1 month"),
                            (8, b"2 months"),
                            (12, b"3 months"),
                            (24, b"6 months"),
                            (48, b"1 year"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "available_days",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=10),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        db_index=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("is_parent_request", models.BooleanField(default=False)),
                (
                    "class_of_child",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"Select Class"),
                            (b"1", b"Nursery Class"),
                            (b"2", b"Basic or Grade 1"),
                            (b"3", b"Basic or Grade 2"),
                            (b"4", b"Basic or Grade 3"),
                            (b"5", b"Basic or Grade 4"),
                            (b"6", b"Basic or Grade 5"),
                            (b"7", b"Basic or Grade 6"),
                            (b"8", b"Basic 7 or JSS 1"),
                            (b"9", b"Basic 8 or JSS 2"),
                            (b"10", b"Basic 9 or JSS 3"),
                            (b"11", b"Basic 10 or SSS 1"),
                            (b"12", b"Basic 11 or SSS 2"),
                            (b"13", b"Basic 12 or SSS 3"),
                            (b"14", b"Undergraduate"),
                            (b"15", b"Adult Student"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "classes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=15),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "age",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"Select Age"),
                            (b"1", b"3 to 5 years"),
                            (b"2", b"6 to 8 years"),
                            (b"3", b"9 to 11 years"),
                            (b"4", b"12 to 17 years"),
                            (b"5", b"18 years +"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "request_subjects",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "curriculum",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"I'm not sure"),
                            (b"1", b"Nigerian Curriculum"),
                            (b"2", b"British Curriculum"),
                            (b"3", b"American Curriculum"),
                            (b"4", b"Both British and Nigerian"),
                            (b"5", b"Doesn't apply to me"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, b"issued"),
                            (2, b"completed"),
                            (3, b"payed"),
                            (4, b"pending"),
                            (5, b"request_to_meet"),
                            (6, b"booked"),
                            (9, b"found_manually"),
                            (7, b"book_later"),
                            (8, b"cold"),
                            (10, b"prospective_client"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "will_be_paying_with",
                    models.IntegerField(
                        choices=[
                            (0, b"Select Payment Mode"),
                            (1, b"Online Payment"),
                            (2, b"Bank Payment"),
                            (3, b"Wallet Balance"),
                        ],
                        default=0,
                        null=True,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, default=0, max_digits=10
                    ),
                ),
                ("school", models.CharField(blank=True, max_length=70, null=True)),
                (
                    "time_of_lesson",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("remarks", models.CharField(blank=True, max_length=150, null=True)),
                ("paid_fee", models.BooleanField(default=False)),
                ("email_sent", models.BooleanField(default=False)),
                ("multiple_month", models.BooleanField(default=False)),
                ("valid_request", models.BooleanField(default=True)),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                ("is_split", models.BooleanField(default=False)),
                (
                    "percent_discount",
                    models.IntegerField(blank=True, default=5, null=True),
                ),
                (
                    "price_range",
                    django.contrib.postgres.fields.ranges.IntegerRangeField(
                        blank=True, null=True
                    ),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="external.Agent",
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bookings.Booking",
                    ),
                ),
                (
                    "related_request",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="external.BaseRequestTutor",
                    ),
                ),
                (
                    "ts",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="skills.TutorSkill",
                    ),
                ),
                (
                    "tutor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="my_client_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Client's Request Detail",
                "verbose_name_plural": "Client's Request Details",
            },
        ),
        migrations.CreateModel(
            name="DepositMoney",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "order",
                    models.CharField(
                        db_index=True, max_length=12, primary_key=True, serialize=False
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "wallet_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("made_payment", models.BooleanField(default=False)),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, b"issued"), (2, b"payed")], default=1
                    ),
                ),
                ("paystack_access_code", models.URLField(blank=True, null=True)),
                (
                    "request",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_deposits",
                        to="external.BaseRequestTutor",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deposits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Patner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=70, verbose_name="name")),
                ("email", models.EmailField(max_length=254)),
                (
                    "company_name",
                    models.CharField(max_length=70, verbose_name="name of company"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"", b"Select State"),
                            (b"Abia", b"Abia"),
                            (b"Abuja", b"Abuja"),
                            (b"Adamawa", b"Adamawa"),
                            (b"Akwa Ibom", b"Akwa Ibom"),
                            (b"Anambra", b"Anambra"),
                            (b"Bayelsa", b"Bayelsa"),
                            (b"Bauchi", b"Bauchi"),
                            (b"Benue", b"Benue"),
                            (b"Borno", b"Borno"),
                            (b"Cross River", b"Cross River"),
                            (b"Delta", b"Delta"),
                            (b"Edo", b"Edo"),
                            (b"Ebonyi", b"Ebonyi"),
                            (b"Ekiti", b"Ekiti"),
                            (b"Enugu", b"Enugu"),
                            (b"Gombe", b"Gombe"),
                            (b"Imo", b"Imo"),
                            (b"Jigawa", b"Jigawa"),
                            (b"Kaduna", b"Kaduna"),
                            (b"Kano", b"Kano"),
                            (b"Katsina", b"Katsina"),
                            (b"Kebbi", b"Kebbi"),
                            (b"Kogi", b"Kogi"),
                            (b"Kwara", b"Kwara"),
                            (b"Lagos", b"Lagos"),
                            (b"Nassawara", b"Nassawara"),
                            (b"Niger", b"Niger"),
                            (b"Ogun", b"Ogun"),
                            (b"Ondo", b"Ondo"),
                            (b"Osun", b"Osun"),
                            (b"Oyo", b"Oyo"),
                            (b"Plateau", b"Plateau"),
                            (b"Rivers", b"Rivers"),
                            (b"Sokoto", b"Sokoto"),
                            (b"Taraba", b"Taraba"),
                            (b"Yobe", b"Yobe"),
                            (b"Zamfara", b"Zamfara"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                ("body", models.TextField(verbose_name="body")),
            ],
        ),
        migrations.CreateModel(
            name="PriceDeterminator",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("use_default", models.BooleanField(default=True)),
                (
                    "price_base_rate",
                    models.DecimalField(decimal_places=3, default=0.08, max_digits=6),
                ),
                (
                    "one_hour_less_price_rate",
                    models.DecimalField(decimal_places=3, default=1.25, max_digits=6),
                ),
                (
                    "hour_rate",
                    models.DecimalField(decimal_places=3, default=0.2, max_digits=6),
                ),
                (
                    "student_no_rate",
                    models.DecimalField(decimal_places=3, default=0.25, max_digits=6),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SocialCount",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "network_type",
                    models.CharField(
                        choices=[
                            (b"facebook", b"facebook"),
                            (b"google", b"google"),
                            (b"twitter", b"twitter"),
                        ],
                        db_index=True,
                        max_length=10,
                    ),
                ),
                ("count", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="BookingsToBePlaced",
            fields=[],
            options={"proxy": True},
            bases=("external.baserequesttutor",),
        ),
        migrations.CreateModel(
            name="Customers",
            fields=[],
            options={"proxy": True},
            bases=("external.baserequesttutor",),
        ),
        migrations.CreateModel(
            name="CustomersWhoPlacedRequests",
            fields=[],
            options={"proxy": True},
            bases=("external.baserequesttutor",),
        ),
        migrations.CreateModel(
            name="MatchMadeFromRequest",
            fields=[],
            options={"proxy": True},
            bases=("external.baserequesttutor",),
        ),
        migrations.CreateModel(
            name="NewBaseRequestTutor",
            fields=[],
            options={"proxy": True},
            bases=("external.baserequesttutor",),
        ),
        migrations.CreateModel(
            name="PendingRequest",
            fields=[],
            options={"proxy": True},
            bases=("external.baserequesttutor",),
        ),
        migrations.CreateModel(
            name="SuccessfulRequestAnalysis",
            fields=[],
            options={"proxy": True},
            bases=("external.baserequesttutor",),
        ),
    ]
